generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_URI")
}

model User {
  id                String             @id @default(uuid())
  userName          String
  email             String             @unique
  passwordHash      String
  createdAt         String
  firstName         String?
  lastName          String?
  birthday          DateTime?          @db.Date
  city              String?
  aboutMe           String?
  isConfirmed       Boolean            @default(false)
  Device            Device[]
  EmailConfirmation EmailConfirmation?
  PasswordRecovery  PasswordRecovery?
  Avatar            Avatar?
  Posts             Posts[]
}

model EmailConfirmation {
  userId           String @id
  user             User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  confirmationCode String
}

model PasswordRecovery {
  userId               String @id
  user                 User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  passwordRecoveryCode String
}

model Device {
  deviceId  String @id
  ipAddress String
  title     String
  createdAt String
  userId    String
  user      User   @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Avatar {
  userId    String @id
  user      User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  photoLink String
}

model Posts {
  id           String         @id @default(uuid())
  userId       String
  user         User           @relation(fields: [userId], references: [id], onDelete: Cascade)
  description  String
  Photos       Photos[]
  isDeleted    Boolean        @default(false)
  DeletedPosts DeletedPosts[]
}

model DeletedPosts {
  postId   String  @id
  posts    Posts   @relation(fields: [postId], references: [id], onDelete: Cascade)
  deleteAt String
  deleteBy Role
  reason   String? @db.VarChar(200)
}

enum Role {
  ADMIN
  USER
}

model Photos {
  id        String @id @default(uuid())
  photoLink String
  postId    String
  posts     Posts  @relation(fields: [postId], references: [id], onDelete: Cascade)
}
